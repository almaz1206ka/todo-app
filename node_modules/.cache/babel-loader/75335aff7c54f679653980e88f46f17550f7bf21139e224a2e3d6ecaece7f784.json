{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u043E\\u043C\\u043F\\u0443\\u0434\\u0430\\u0445\\u0442\\u0435\\u0440\\\\Desktop\\\\\\u0443\\u0447\\u0435\\u0431\\u0430\\\\todo_app\\\\todo\\\\src\\\\components\\\\TaskContainer.jsx\";\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from './NewTaskForm.jsx';\nimport TaskList from './TaskList.jsx';\nimport Footer from './Footer.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      if (event.target.value !== '') {\n        this.setState({\n          task: event.target.value\n        });\n      }\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const newItem = {\n        task: this.state.task,\n        editInput: '',\n        id: this.state.id,\n        checked: false,\n        visible: true,\n        edit: false,\n        date: new Date(),\n        createTime: 'now'\n      };\n      const updateItem = [newItem, ...this.state.tasks];\n      if (event.target.value && event.key === 'Enter') {\n        event.target.value = '';\n        this.setState({\n          tasks: updateItem,\n          id: uuidv4(),\n          edit: false,\n          checked: this.state.checked\n        });\n      }\n    };\n    this.reloadTimer = () => {\n      if (this.state.tasks.length > 0) {\n        const timer = this.state.tasks.map(item => item && {\n          ...item,\n          createTime: formatDistanceToNow(item.date, {\n            addSuffix: true,\n            includeSeconds: true\n          })\n        });\n        this.setState({\n          tasks: timer\n        });\n      }\n    };\n    this.deleteTask = id => {\n      const filteredItems = this.state.tasks.filter(item => item.id !== id);\n      this.setState({\n        tasks: filteredItems\n      });\n    };\n    this.editTask = id => {\n      const selectedTask = this.state.tasks.map(item => item.id === id && item.edit === false ? {\n        ...item,\n        edit: true\n      } : {\n        ...item,\n        edit: false\n      });\n      this.setState({\n        tasks: selectedTask\n      });\n    };\n    this.editTaskInput = e => {\n      if (e.target.value !== '') {\n        this.setState({\n          editInput: e.target.value\n        });\n      }\n    };\n    this.editTaskSubmit = e => {\n      e.preventDefault();\n      const selectedTask = this.state.tasks.map(item => item.edit === true ? {\n        ...item,\n        edit: false,\n        task: this.state.editInput,\n        date: new Date()\n      } : {\n        ...item\n      });\n      if (e.key === 'Enter') {\n        this.setState({\n          tasks: selectedTask\n        });\n      }\n    };\n    this.checkboxChange = id => {\n      const selectedTask = this.state.tasks.map(item => item.id === id ? {\n        ...item,\n        checked: !item.checked\n      } : {\n        ...item\n      });\n      this.setState({\n        tasks: selectedTask\n      });\n    };\n    this.clearList = () => {\n      const completedTask = this.state.tasks.filter(item => item.checked !== true);\n      this.setState({\n        tasks: completedTask\n      });\n    };\n    this.allList = () => {\n      const selectedTask = this.state.tasks.map(item => item && {\n        ...item,\n        visible: true\n      });\n      this.setState({\n        tasks: selectedTask\n      });\n    };\n    this.activeList = () => {\n      const selectedTask = this.state.tasks.map(item => item.checked === false ? {\n        ...item,\n        visible: true\n      } : {\n        ...item,\n        visible: false\n      });\n      this.setState({\n        tasks: selectedTask\n      });\n    };\n    this.completedList = () => {\n      const selectedTask = this.state.tasks.map(item => item.checked !== false ? {\n        ...item,\n        visible: true\n      } : {\n        ...item,\n        visible: false\n      });\n      const completedCount = this.state.tasks.filter(item => item.checked === true).length;\n      if (completedCount !== 0) {\n        this.setState({\n          tasks: selectedTask\n        });\n      }\n    };\n    this.tasksLeft = () => {\n      const findedTask = this.state.tasks.filter(item => item.checked === false);\n      this.setState({\n        taskLeft: findedTask.length\n      });\n    };\n    this.state = {\n      task: '',\n      id: uuidv4(),\n      tasks: [],\n      taskLeft: 0\n    };\n  }\n  componentDidUpdate() {\n    this.countTimer = setInterval(() => this.tasksLeft(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.countTimer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        task: this.state.task,\n        checkboxChange: this.checkboxChange,\n        editTask: this.editTask,\n        editTaskInput: this.editTaskInput,\n        editTaskSubmit: this.editTaskSubmit,\n        reloadTimer: this.reloadTimer,\n        deleteTask: this.deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        clearTasks: this.clearList,\n        allList: this.allList,\n        activeList: this.activeList,\n        completedList: this.completedList,\n        tasksLeft: this.state.taskLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TaskContainer;","map":{"version":3,"names":["Component","v4","uuidv4","formatDistanceToNow","NewTaskForm","TaskList","Footer","jsxDEV","_jsxDEV","TaskContainer","constructor","props","handleChange","event","target","value","setState","task","handleSubmit","preventDefault","newItem","state","editInput","id","checked","visible","edit","date","Date","createTime","updateItem","tasks","key","reloadTimer","length","timer","map","item","addSuffix","includeSeconds","deleteTask","filteredItems","filter","editTask","selectedTask","editTaskInput","e","editTaskSubmit","checkboxChange","clearList","completedTask","allList","activeList","completedList","completedCount","tasksLeft","findedTask","taskLeft","componentDidUpdate","countTimer","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clearTasks"],"sources":["C:/Users/Компудахтер/Desktop/учеба/todo_app/todo/src/components/TaskContainer.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { formatDistanceToNow } from 'date-fns';\n\nimport NewTaskForm from './NewTaskForm.jsx';\nimport TaskList from './TaskList.jsx';\nimport Footer from './Footer.jsx';\n\nclass TaskContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: '',\n      id: uuidv4(),\n      tasks: [],\n      taskLeft: 0,\n    };\n  }\n\n  handleChange = (event) => {\n    if (event.target.value !== '') {\n      this.setState({\n        task: event.target.value,\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newItem = {\n      task: this.state.task,\n      editInput: '',\n      id: this.state.id,\n      checked: false,\n      visible: true,\n      edit: false,\n      date: new Date(),\n      createTime: 'now',\n    };\n    const updateItem = [newItem, ...this.state.tasks];\n    if (event.target.value && event.key === 'Enter') {\n      event.target.value = '';\n      this.setState({\n        tasks: updateItem,\n        id: uuidv4(),\n        edit: false,\n        checked: this.state.checked,\n      });\n    }\n  };\n\n  reloadTimer = () => {\n    if (this.state.tasks.length > 0) {\n      const timer = this.state.tasks.map(\n        (item) =>\n          item && { ...item, createTime: formatDistanceToNow(item.date, { addSuffix: true, includeSeconds: true }) }\n      );\n      this.setState({\n        tasks: timer,\n      });\n    }\n  };\n\n  componentDidUpdate() {\n    this.countTimer = setInterval(() => this.tasksLeft(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.countTimer);\n  }\n\n  deleteTask = (id) => {\n    const filteredItems = this.state.tasks.filter((item) => item.id !== id);\n    this.setState({\n      tasks: filteredItems,\n    });\n  };\n\n  editTask = (id) => {\n    const selectedTask = this.state.tasks.map((item) =>\n      item.id === id && item.edit === false ? { ...item, edit: true } : { ...item, edit: false }\n    );\n    this.setState({\n      tasks: selectedTask,\n    });\n  };\n\n  editTaskInput = (e) => {\n    if (e.target.value !== '') {\n      this.setState({\n        editInput: e.target.value,\n      });\n    }\n  };\n\n  editTaskSubmit = (e) => {\n    e.preventDefault();\n    const selectedTask = this.state.tasks.map((item) =>\n      item.edit === true ? { ...item, edit: false, task: this.state.editInput, date: new Date() } : { ...item }\n    );\n    if (e.key === 'Enter') {\n      this.setState({\n        tasks: selectedTask,\n      });\n    }\n  };\n\n  checkboxChange = (id) => {\n    const selectedTask = this.state.tasks.map((item) =>\n      item.id === id ? { ...item, checked: !item.checked } : { ...item }\n    );\n    this.setState({\n      tasks: selectedTask,\n    });\n  };\n\n  clearList = () => {\n    const completedTask = this.state.tasks.filter((item) => item.checked !== true);\n    this.setState({\n      tasks: completedTask,\n    });\n  };\n\n  allList = () => {\n    const selectedTask = this.state.tasks.map((item) => item && { ...item, visible: true });\n    this.setState({\n      tasks: selectedTask,\n    });\n  };\n\n  activeList = () => {\n    const selectedTask = this.state.tasks.map((item) =>\n      item.checked === false ? { ...item, visible: true } : { ...item, visible: false }\n    );\n    this.setState({\n      tasks: selectedTask,\n    });\n  };\n\n  completedList = () => {\n    const selectedTask = this.state.tasks.map((item) =>\n      item.checked !== false ? { ...item, visible: true } : { ...item, visible: false }\n    );\n    const completedCount = this.state.tasks.filter((item) => item.checked === true).length;\n    if (completedCount !== 0) {\n      this.setState({\n        tasks: selectedTask,\n      });\n    }\n  };\n\n  tasksLeft = () => {\n    const findedTask = this.state.tasks.filter((item) => item.checked === false);\n    this.setState({\n      taskLeft: findedTask.length,\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm handleChange={this.handleChange} handleSubmit={this.handleSubmit} />\n        <TaskList\n          tasks={this.state.tasks}\n          task={this.state.task}\n          checkboxChange={this.checkboxChange}\n          editTask={this.editTask}\n          editTaskInput={this.editTaskInput}\n          editTaskSubmit={this.editTaskSubmit}\n          reloadTimer={this.reloadTimer}\n          deleteTask={this.deleteTask}\n        />\n        <Footer\n          clearTasks={this.clearList}\n          allList={this.allList}\n          activeList={this.activeList}\n          completedList={this.completedList}\n          tasksLeft={this.state.taskLeft}\n        />\n      </section>\n    );\n  }\n}\n\nexport default TaskContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}